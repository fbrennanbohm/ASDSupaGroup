{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\NetBeansProjects\\\\ASDSupaGroup\\\\src\\\\containers\\\\Signup.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    setNewUser(\"test\");\n    setIsLoading(false);\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n  }\n\n  function renderConfirmationForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleConfirmationSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"confirmationCode\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Confirmation Code\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"tel\",\n      onChange: handleFieldChange,\n      value: fields.confirmationCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(HelpBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Please check your email for the code.\")), /*#__PURE__*/React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateConfirmationForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Verify\"));\n  }\n\n  function renderForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: fields.email,\n      onChange: handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      value: fields.password,\n      onChange: handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      onChange: handleFieldChange,\n      value: fields.confirmPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Signup\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, newUser === null ? renderForm() : renderConfirmationForm());\n}","map":{"version":3,"sources":["C:/Users/admin/Documents/NetBeansProjects/ASDSupaGroup/src/containers/Signup.js"],"names":["React","useState","useHistory","HelpBlock","FormGroup","FormControl","ControlLabel","LoaderButton","useFormFields","Signup","fields","handleFieldChange","email","password","confirmPassword","confirmationCode","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","validateConfirmationForm","handleSubmit","event","preventDefault","handleConfirmationSubmit","renderConfirmationForm","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n   ControlLabel\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    confirmationCode: \"\",\r\n  });\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return (\r\n      fields.email.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n\r\n  function validateConfirmationForm() {\r\n    return fields.confirmationCode.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    setNewUser(\"test\");\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmationSubmit}>\r\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmationCode}\r\n          />\r\n          <HelpBlock>Please check your email for the code.</HelpBlock>\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          disabled={!validateConfirmationForm()}\r\n        >\r\n          Verify\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmPassword}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Signup\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Signup\">\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}